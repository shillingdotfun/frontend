## This workflow is executed manually by a developer.
##
## Project: Frontend
## Repository: https://github.com/shillingdotfun/frontend.git
## Version: 0.0.2
## Aim: Deploy the project in AWS S3 static website .

name: Release a new version

# This workflow is triggered manually
on:
  workflow_dispatch:
    inputs:
      env_deploy:
        description: 'Environment to release the code.'
        required: true
        type: choice
        options:
          - staging
          - prod
        default: staging

# Permission can be added at job level or workflow level
permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout

env:
  NODE_VERSION: 24
  DIR_TO_UPLOAD: dist

defaults:
  run:
    shell: bash

jobs:
  deploy:
    if: github.event_name == 'workflow_dispatch'

    name: Deploy version
    runs-on: ubuntu-latest
    environment: staging
    env:
      ENV_TO_DEPLOY: ${{ github.event.inputs.env_deploy }}

    steps:
      # https://github.com/actions/checkout
      - name: Clone the repository
        uses: actions/checkout@v5

      # https://github.com/aws-actions/configure-aws-credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v5.1.0
        with:
          audience: sts.amazonaws.com
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_OIDC }}

      # https://github.com/actions/setup-node
      - name: Use Node
        uses: actions/setup-node@v6
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Set environment-specific secrets
        id: set-secrets
        run: |
          echo "Environment selected: ${{ github.event.inputs.env_deploy }}"
          if [ "${{ github.event.inputs.env_deploy }}" = "prod" ]; then
            echo "AWS_BUCKET=${{ secrets.PROD_AWS_BUCKET }}" >> $GITHUB_ENV
            echo "AWS_SSM_PS=${{ secrets.PROD_AWS_SSM_PS }}" >> $GITHUB_ENV
          else
            echo "AWS_BUCKET=${{ secrets.STAGING_AWS_BUCKET }}" >> $GITHUB_ENV
            echo "AWS_SSM_PS=${{ secrets.STAGING_AWS_SSM_PS }}" >> $GITHUB_ENV
          fi

      - name: Download env file from AWS SSM Parameter Store
        run: |
          aws ssm \
            get-parameter \
            --with-decryption \
            --name "$AWS_SSM_PS" \
            --output text \
            --query 'Parameter.Value' \
            > .env

      - name: Install the project dependencies
        run: npm install

      - name: Build the project
        env:
          NODE_OPTIONS: --max_old_space_size=4096
        run: |
          npm run build
          echo "Build completed"

      - name: Upload to S3
        working-directory: ${{ env.DIR_TO_UPLOAD }}
        run: |
          aws s3 sync ./ "s3://$AWS_BUCKET" --delete

      - name: Set emoji status
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "EMOJI_STATUS=:rocket: :rocket:" >> $GITHUB_ENV
          else
            echo "EMOJI_STATUS=:rotating_light: :rotating_light:" >> $GITHUB_ENV
          fi

      # https://github.com/slackapi/slack-github-action
      - name: Send a notification
        if: always()
        uses: slackapi/slack-github-action@v2.1.1
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          webhook-type: incoming-webhook
          payload: |
            text: "Release Frontend to ${ENV_TO_DEPLOY} - Status: ${{ job.status }}"
            blocks:
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: "${{ env.EMOJI_STATUS }} *Deployment status:* `${{ job.status }}`"
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: "*Environment:* ${{ env.ENV_TO_DEPLOY }}"
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: "*Workflow:* ${{ github.workflow }}"
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: "*Repository:* ${{ github.repository }}"
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: "*Branch:* ${{ github.ref }}"
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: "*Commit:* ${{ github.sha }}"
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: "*User:* ${{ github.actor }}"
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: "*Run URL:* <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|Click here>"
